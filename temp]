jQuery(document).ready(function ($) {
  const baseUrl = "https://vapeverification-api-dev.falconweb.app";
  // const baseUrl = "https://getveriscan.dev";

  // Global AJAX error handler
  $.ajaxSetup({
    error: function (jqXHR, textStatus, errorThrown) {
      console.error("AJAX Error: ", textStatus, errorThrown);
      handleAjaxError(jqXHR);
    },
  });

  // Unified error handling function
  function handleAjaxError(jqXHR) {
    let errorMessage = "An unexpected error occurred.";
    // Customize the error message based on the response
    if (jqXHR.responseJSON && jqXHR.responseJSON.message) {
      errorMessage = jqXHR.responseJSON.message;
    }
    showErrorPopup(errorMessage);
  }

  // Function to display the error popup
  function showErrorPopup(message) {
    const popupContent = `
            <div class="popup popup.swipe-up">
                <div class="popup-content">
                    <div class="img-container" style="margin-top:-22%">
                        <img src="${veriscan_ajax_object.pluginUrl}assets/images/warning.png" alt="Warning" />
                    </div>
                    <div class="popup-header">
                        <h2><strong>Error Detected</strong></h2>
                    </div>
                    <div class="popup-body">
                        <p>${message}</p>
                    </div>
                    <button class="close-button" style="background-color: #FFA500;">Close</button>
                </div>
            </div>
        `;
    $("#veriscan-popup-content").html(popupContent);
    $("#veriscan-popup").show();
    $("#veriscan-overlay").show();
  }

  // Get Code ID from URL parameter
  var codeIdParam = getParameterByName("h");
  if (codeIdParam) {
    submitForm(codeIdParam);
  }

  // Check Brand ID with error handling
  function checkBrandId() {
    try {
      var brandIdFromAjax = veriscan_ajax_object.brandId;
      var brandId =
        brandIdFromAjax || localStorage.getItem("veriscan_brand_id");

      if (!brandId) {
        throw new Error("Brand ID not found.");
      }
      return brandId;
    } catch (error) {
      console.error("Error in checkBrandId: ", error.message);
      showErrorPopup(error.message);
      return null; // Handle accordingly
    }
  }

  //Get Time difference with scaned time and current time
  function getTimeDifference(validationDate) {
    var currentDate = new Date();
    var validatedDate = new Date(validationDate);
    var diffTime = currentDate - validatedDate;

    var diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));
    var diffHours = Math.floor(
      (diffTime % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)
    );
    var diffMinutes = Math.floor((diffTime % (1000 * 60 * 60)) / (1000 * 60));

    // Helper function to format time difference
    function formatTime(value, unit) {
      return `${value} ${unit}${value > 1 ? "s" : ""} ago`;
    }

    if (diffDays < 1) {
      if (diffHours < 1) {
        return formatTime(diffMinutes, "minute");
      } else {
        return formatTime(diffHours, "hour");
      }
    } else if (diffDays < 30) {
      return formatTime(diffDays, "day");
    } else if (diffDays >= 30 && diffDays < 365) {
      var monthsAgo = Math.floor(diffDays / 30);
      return formatTime(monthsAgo, "month");
    } else {
      var yearsAgo = Math.floor(diffDays / 365);
      return formatTime(yearsAgo, "year");
    }
  }

  // Submit Form function with AJAX
  function submitForm(codeId) {
    $("#veriscan-overlay").show();
    $("#veriscan-loader").show();

    var brandId = checkBrandId();
    if (!brandId) return; // If brandId is null, exit the function

    var apiEndpoint = `${baseUrl}/api/v1/codes/validate`;
    var payload = {
      codeId: codeId,
      brandId: brandId,
    };

    $.ajax({
      type: "POST",
      url: apiEndpoint,
      contentType: "application/json; charset=utf-8",
      data: JSON.stringify(payload),
      complete: function (result) {
        const response = result.responseJSON;
        console.log(response);
        $("#veriscan-loader").hide();

        var popupContent = "";
        var productImg = response?.productInfo?.productImg
          ? `${baseUrl}/${response.productInfo.productImg}`
          : "";

        var productImgElement = productImg
          ? `<img id="prod-img" src="${productImg}" alt="Product Image" class="product-image">`
          : "";

        // Handle different response statuses
        switch (response.status) {
          case "valid":
            var productName =
              response?.productInfo?.productName || "Unknown Product";
            var displayCode = response.serialNumber || response.code || codeId;
            popupContent = `
                            <div class="popup popup.swipe-up">
                                <div class="popup-content">
                                    <div class="img-container" style="margin-top:-22%">
                                        <img src="${
                                          veriscan_ajax_object.pluginUrl
                                        }assets/images/success.png" alt="Success" />
                                    </div>
                                    <div class="popup-header">
                                        <h2><strong>Product Valid</strong></h2>
                                        <p class="header-p">Scan Successful, the product is valid.</p>
                                    </div>
                                    <div class="popup-body">
                                        <div class="product-info">
                                            ${productImgElement}
                                            <div class="product-details">
                                                <h3 class="prod-title" style="text-transform: capitalize;">${productName}</h3>
                                                <p>${
                                                  response.productInfo
                                                    .description || ""
                                                }</p>
                                            </div>
                                        </div>
                                        <div class="product-code"> 
                                            <span class="product-code-label">Code: <span class="display-code">${displayCode}</span></span>
                                        </div>
                                    </div>
                                    <button class="close-button" style="background-color: #079455;">Close</button>
                                </div>
                            </div>
                        `;
            break;

          case "used":
            // Handle 'used' status with the same popup structure
            popupContent = `
                            <div class="popup popup.swipe-up">
                                <div class="popup-content">
                                    <div class="img-container" style="margin-top:-22%">
                                        <img src="${
                                          veriscan_ajax_object.pluginUrl
                                        }assets/images/warning.png" alt="Warning" />
                                    </div>
                                    <div class="popup-header">
                                        <h2><strong>Product Used</strong></h2>
                                        <p class="header-p">This product has already been scanned.</p>
                                    </div>
                                    <div class="popup-body">
                                        <div class="product-code"> 
                                            <span class="product-code-label">Code: <span class="display-code">${
                                              response.code || codeId
                                            }</span></span>
                                        </div>
                                    </div>
                                    <button class="close-button" style="background-color: #FFA500;">Close</button>
                                </div>
                            </div>
                        `;
            break;

          case "formatError":
          case "notfound":
            // Handle format error or not found with a popup
            showErrorPopup(
              "This product is not listed in our database. Please contact the vendor or check that the code below is correct."
            );
            return; // Exit the function

          default:
            // Handle unknown error case with the same popup structure
            showErrorPopup("An unknown error occurred. Please try again.");
            return; // Exit the function
        }

        // Display the constructed popup content
        $("#veriscan-popup-content").html(popupContent);
        $("#veriscan-popup").show();
        $("#veriscan-overlay").show();
      },
    });
  }

  $("#veriscan-form").submit(function (e) {
    e.preventDefault();
    var codeId = $("#veriscan-code").val();
    submitForm(codeId);
  });

  // Close button functionality
  $(document).on("click", "#veriscan-popup .close-button", function () {
    $("#veriscan-popup").hide();
    $("#veriscan-overlay").hide();
    removeUrlParam("h"); // Remove the codeId parameter from the URL on close
  });

  // Function to get URL parameters
  function getParameterByName(name, url) {
    if (!url) url = window.location.href;
    name = name.replace(/[\[\]]/g, "\\$&");
    var regex = new RegExp("[?&]" + name + "(=([^&#]*)|&|#|$)"),
      results = regex.exec(url);
    if (!results) return null;
    if (!results[2]) return "";
    return decodeURIComponent(results[2].replace(/\+/g, " "));
  }

  // Function to remove URL parameter
  function removeUrlParam(param) {
    var url = window.location.href;
    var regex = new RegExp("([?&])" + param + "=.*?(&|$)", "i");
    var newUrl = url.replace(regex, "$1").replace(/&$/, "").replace(/\?$/, "");
    window.history.replaceState({}, document.title, newUrl); // Update the URL in the browser
  }

  // Additional functions can be added here...
});
